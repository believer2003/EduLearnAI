{"ast":null,"code":"/**\n * child-process-async.js\n * ----------------------\n *\n * @flow\n */\n\nconst child_process = require('child_process');\nfunction exec(command, options) /*: ChildProcess & Promise<{ stdout:Buffer|string, stderr:Buffer|string }>*/{\n  let proc;\n  const _promise = new Promise((resolve, reject) => {\n    proc = child_process.exec(command, options, (err, stdout, stderr) => err ? reject(err) : resolve({\n      stdout,\n      stderr\n    }));\n  });\n  Object.defineProperties(proc, {\n    then: {\n      value: _promise.then.bind(_promise)\n    },\n    catch: {\n      value: _promise.catch.bind(_promise)\n    }\n  });\n  return proc;\n}\nfunction spawn(command, args, options) /*: ChildProcess & Promise<{ stdout:Buffer|string|null, stderr:Buffer|string|null, exitCode:number }>*/{\n  const proc = child_process.spawn(command, args, options);\n  const _promise = new Promise((resolve, reject) => {\n    let stdout = proc.stdout && proc.stdout.readable ? Buffer.alloc(0) : null,\n      stderr = proc.stderr && proc.stderr.readable ? Buffer.alloc(0) : null;\n    if (Buffer.isBuffer(stdout)) {\n      proc.stdout.on('data', data => stdout = Buffer.concat([stdout, data]));\n    }\n    if (Buffer.isBuffer(stderr)) {\n      proc.stderr.on('data', data => stderr = Buffer.concat([stderr, data]));\n    }\n    proc.on('error', reject);\n    proc.on('close', exitCode => resolve({\n      stdout,\n      stderr,\n      exitCode\n    }));\n  });\n  Object.defineProperties(proc, {\n    then: {\n      value: _promise.then.bind(_promise)\n    },\n    catch: {\n      value: _promise.catch.bind(_promise)\n    }\n  });\n  return proc;\n}\nmodule.exports = Object.assign({}, child_process, {\n  exec,\n  spawn\n});","map":{"version":3,"names":["child_process","require","exec","command","options","proc","_promise","Promise","resolve","reject","err","stdout","stderr","Object","defineProperties","then","value","bind","catch","spawn","args","readable","Buffer","alloc","isBuffer","on","data","concat","exitCode","module","exports","assign"],"sources":["/Users/yashtyagi/VScode/hackathon/hackathon/frontend/node_modules/child-process-async/child-process-async.js"],"sourcesContent":["/**\n * child-process-async.js\n * ----------------------\n *\n * @flow\n */\n\nconst child_process = require('child_process');\n\nfunction exec(command, options) /*: ChildProcess & Promise<{ stdout:Buffer|string, stderr:Buffer|string }>*/ {\n    let proc;\n    const _promise = new Promise((resolve, reject) => {\n        proc = child_process.exec(command, options, (err, stdout, stderr) =>\n            err ? reject(err) : resolve({ stdout, stderr })\n        );\n    });\n    Object.defineProperties(proc, {\n        then: { value: _promise.then.bind(_promise) },\n        catch: { value: _promise.catch.bind(_promise) },\n    });\n    return proc;\n}\n\nfunction spawn(command, args, options) /*: ChildProcess & Promise<{ stdout:Buffer|string|null, stderr:Buffer|string|null, exitCode:number }>*/ {\n    const proc = child_process.spawn(command, args, options);\n    const _promise = new Promise((resolve, reject) => {\n        let stdout = (proc.stdout && proc.stdout.readable) ? Buffer.alloc(0) : null,\n            stderr = (proc.stderr && proc.stderr.readable) ? Buffer.alloc(0) : null;\n        if (Buffer.isBuffer(stdout)) {\n            proc.stdout.on('data', (data) => stdout = Buffer.concat([ stdout, data ]));\n        }\n        if (Buffer.isBuffer(stderr)) {\n            proc.stderr.on('data', (data) => stderr = Buffer.concat([ stderr, data ]));\n        }\n        proc.on('error', reject);\n        proc.on('close', (exitCode) => resolve({ stdout, stderr, exitCode }));\n    });\n    Object.defineProperties(proc, {\n        then: { value: _promise.then.bind(_promise) },\n        catch: { value: _promise.catch.bind(_promise) },\n    });\n    return proc;\n}\n\nmodule.exports = Object.assign({}, child_process, { exec, spawn });\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE9C,SAASC,IAAIA,CAACC,OAAO,EAAEC,OAAO,EAAE,4EAA6E;EACzG,IAAIC,IAAI;EACR,MAAMC,QAAQ,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC9CJ,IAAI,GAAGL,aAAa,CAACE,IAAI,CAACC,OAAO,EAAEC,OAAO,EAAE,CAACM,GAAG,EAAEC,MAAM,EAAEC,MAAM,KAC5DF,GAAG,GAAGD,MAAM,CAACC,GAAG,CAAC,GAAGF,OAAO,CAAC;MAAEG,MAAM;MAAEC;IAAO,CAAC,CAClD,CAAC;EACL,CAAC,CAAC;EACFC,MAAM,CAACC,gBAAgB,CAACT,IAAI,EAAE;IAC1BU,IAAI,EAAE;MAAEC,KAAK,EAAEV,QAAQ,CAACS,IAAI,CAACE,IAAI,CAACX,QAAQ;IAAE,CAAC;IAC7CY,KAAK,EAAE;MAAEF,KAAK,EAAEV,QAAQ,CAACY,KAAK,CAACD,IAAI,CAACX,QAAQ;IAAE;EAClD,CAAC,CAAC;EACF,OAAOD,IAAI;AACf;AAEA,SAASc,KAAKA,CAAChB,OAAO,EAAEiB,IAAI,EAAEhB,OAAO,EAAE,uGAAwG;EAC3I,MAAMC,IAAI,GAAGL,aAAa,CAACmB,KAAK,CAAChB,OAAO,EAAEiB,IAAI,EAAEhB,OAAO,CAAC;EACxD,MAAME,QAAQ,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC9C,IAAIE,MAAM,GAAIN,IAAI,CAACM,MAAM,IAAIN,IAAI,CAACM,MAAM,CAACU,QAAQ,GAAIC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;MACvEX,MAAM,GAAIP,IAAI,CAACO,MAAM,IAAIP,IAAI,CAACO,MAAM,CAACS,QAAQ,GAAIC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;IAC3E,IAAID,MAAM,CAACE,QAAQ,CAACb,MAAM,CAAC,EAAE;MACzBN,IAAI,CAACM,MAAM,CAACc,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAKf,MAAM,GAAGW,MAAM,CAACK,MAAM,CAAC,CAAEhB,MAAM,EAAEe,IAAI,CAAE,CAAC,CAAC;IAC9E;IACA,IAAIJ,MAAM,CAACE,QAAQ,CAACZ,MAAM,CAAC,EAAE;MACzBP,IAAI,CAACO,MAAM,CAACa,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAKd,MAAM,GAAGU,MAAM,CAACK,MAAM,CAAC,CAAEf,MAAM,EAAEc,IAAI,CAAE,CAAC,CAAC;IAC9E;IACArB,IAAI,CAACoB,EAAE,CAAC,OAAO,EAAEhB,MAAM,CAAC;IACxBJ,IAAI,CAACoB,EAAE,CAAC,OAAO,EAAGG,QAAQ,IAAKpB,OAAO,CAAC;MAAEG,MAAM;MAAEC,MAAM;MAAEgB;IAAS,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;EACFf,MAAM,CAACC,gBAAgB,CAACT,IAAI,EAAE;IAC1BU,IAAI,EAAE;MAAEC,KAAK,EAAEV,QAAQ,CAACS,IAAI,CAACE,IAAI,CAACX,QAAQ;IAAE,CAAC;IAC7CY,KAAK,EAAE;MAAEF,KAAK,EAAEV,QAAQ,CAACY,KAAK,CAACD,IAAI,CAACX,QAAQ;IAAE;EAClD,CAAC,CAAC;EACF,OAAOD,IAAI;AACf;AAEAwB,MAAM,CAACC,OAAO,GAAGjB,MAAM,CAACkB,MAAM,CAAC,CAAC,CAAC,EAAE/B,aAAa,EAAE;EAAEE,IAAI;EAAEiB;AAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}